// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UncoreMetrics.Data.Discord;

#nullable disable

namespace UncoreMetrics.Data.Migrations.DiscordBotContext
{
    [DbContext(typeof(DiscordContext))]
    [Migration("20221219070229_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UncoreMetrics.Data.Discord.DiscordChannelLink", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("ChannelID")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<Guid>("GameServerID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastChanged")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ServerID")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("UserID")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("ID");

                    b.HasIndex("ChannelID");

                    b.HasIndex("Enabled");

                    b.HasIndex("GameServerID");

                    b.HasIndex("ServerID");

                    b.HasIndex("UserID");

                    b.ToTable("Discord_Links", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
