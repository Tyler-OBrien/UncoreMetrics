{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "Base": {
    "PostgresConnectionString": "Server=localhost;Username=postgres;Password=postgres;Database=uncore_metrics",
    "ClickhouseConnectionString": "Host=localhost;Port=8123;Username=default;password=;Database=default",
    "NATSConnectionURL": "nats://127.0.0.1:4222",
    "SteamAPIKey": "DA96ED9F43054048C6A8EADB879C1289", // Example Web API Key
    "SecondsBetweenChecks": 30,
    "ServersPerPollRun": 50000, // Servers each poll run will grab, should all be able to be completed before PollRunTimeout
    "PollRunTimeout": 100, // We want to balance update frequency and batch performance. Clickhouse and the server query pool system benefits from more servers being processed at once/larger batches, but that reduces the polling/alerting frequency. Have to find a good balance.
    "DiscoveryRunTimeout": 60,
    "MaxConcurrency": 1024, // Recommended 1024 or higher for Linux, 512 for Windows (just due to worse network performance on Windows, depends on your own hardware too)
    "SecondsBetweenFailedChecks": [
      60,
      1800,
      3600
    ], // Will grab according to amount of times failed. For example, 2nd time failed will be 1800s, will grab last for any time after running out of items.
    "DaysUntilServerMarkedDead": 14,
    "GameType": "VRising", // See GameResolvers.cs for supported
    "SENTRY_DSN": "https://5f7424c05f964ee2bad174e575d9fb06@o1189162.ingest.sentry.io/6617590", // Example DSN, set to empty to disable.
    "NodeName": "DevEnv-TO" // Make your own naming conventions
  }
}